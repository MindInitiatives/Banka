{
    "openapi": "3.0.0",
    "info": {
      "version": "1.0.0",
      "title": "üè¶üíµBanka",
      "description": "Banka is a light-weight core banking application that powers banking operations like account creation, customer deposit and withdrawals.",
      "license": {
        "name": "MIT",
        "url": "https://opensource.org/licenses/MIT"
      },
      "contact": {
        "email": "tejumoladavid@gmail.com"
      }
    },
    "tags": [
        {
          "name": "Users",
          "description": "API Endpoints for users in the system"
        },
        {
          "name": "Accounts",
          "description": "API Endpoints for Bank Accounts in the system"
        },
        {
          "name": "Transactions",
          "description": "API Endpoints for Credit & Debit Transactions"
        }
    ],
    "schemes": ["http"],
    "consumes": ["application/json", "application/x-www-form-urlencoded"],
    "produces": ["application/json"],
    "paths": {
        "/api/v1/auth/signup": {
            "post": {
                "tags": ["Users"],
                "description": "Register a New User in the system",
                "requestBody": {
                    "description": "Input Data Format",
                    "content": {
                        "application/x-www-form-urlencoded": {
                          "schema": {
                            "properties": {
                               "firstName": {
                                "type": "string",
                                "description": "First Name of User"
                               },
                              "lastName": {
                                "type": "string",
                                "description": "Last Name of User"
                              },
                              "email": {
                                "type": "email",
                                "description": "Email Address of User"
                              },
                              "password": {
                                "type": "string",
                                "description": "Password of User"
                              },
                              "confirmPassword": {
                                "type": "string",
                                "description": "Confirm Password of User"
                              },
                              "isAdmin": {
                                "type": "boolean",
                                "description": "A Boolean to show if User is an admin(true) or staff(false)"
                              },
                              "type": {
                                "type": "string",
                                "description": "Type of a user (staff or client)"
                              }
                            },
                            "type": "object"
                          }
                        }
                      }
                    },
                    "produces": ["application/json"],
                    "responses": {
                      "400": {
                        "description": " A User with the email address already exist"
                      },
                      "201": {
                        "description": "Account was successfully created"
                    }
                }
              }
            },
            "/api/v1/auth/signin": {
              "post": {
                "tags": ["Users"],
                "description": "Sign In a Registered User",
                "requestBody": {
                  "description": "Input Data Format",
                  "content": {
                    "application/x-www-form-urlencoded": {
                      "schema": {
                        "properties": {
                          "email": {
                            "type": "email",
                            "description": "Email Adress of a Registered User"
                          },
                          "password": {
                            "type": "string",
                            "description": "Password of a Registered User"
                          }
                        },
                        "type": "object"
                      }
                    }
                  }
                },
                "produces": ["application/json"],
                "responses": {
                  "422": {
                    "description": "Validation Error"
                  },
                  "401": {
                    "description": "A User Profile Cannot be Found!"
                  },
                  "200": {
                    "description": "Successfully Login a User"
                  }
                }
              }
            },
            "/api/v1/accounts": {
                "get": {
                    "summary": "Get all bank accounts - [Only Staff's can perform this operation]",
                    "tags": ["Accounts"],
                    "produces": ["application/json"],
                    "responses": {
                        "403": {
                            "description": "Only Staff;s can perform this operation"
                          },
                        "401": {
                            "description": "Uauthorized - Specify a JWToken in the header"
                        },
                        "204": {
                            "description": "No account waas found"
                        },
                        "200": {
                            "description": "Successfully fetched all bank accounts"
                        }
                    },
                    "security": [
                      {
                        "JWT": []
                      }
                    ]
                  },
                "post": {
                  "summary": "Creates a new bank account using the authorized user credential",
                  "tags": ["Accounts"],
                  "description": "Creates a new bank account",
                  "requestBody": {
                    "description": "Input Data Format",
                    "content": {
                      "application/x-www-form-urlencoded": {
                        "schema": {
                          "properties": {
                            "type": {
                              "type": "string",
                              "description": "Type of account [savings, current]"
                            },
                            "balance": {
                              "type": "float",
                              "description": "Account opening balance "
                            }
                          },
                          "type": "object"
                        }
                      }
                    }
                  },
                  "produces": ["application/json"],
                  "responses": {
                    "422": {
                      "description": "Validation Error"
                    },
                    "401": {
                        "description": "Uauthorized - Specify a JWToken in the header"
                    },
                    "400": {
                      "description": "A User Already have an Account or Account does exist"
                    },
                    "200": {
                      "description": "Successfully Created an Account"
                    }
                  },
                  "security": [
                    {
                      "JWT": []
                    }
                  ]
                }
              },
              "/api/v1/accounts/{accountNumber}": {
                "parameters": [
                  {
                    "name": "accountNumber",
                    "in": "path",
                    "required": true,
                    "description": "Account number of the account we want to work with",
                    "schema": {
                      "type": "number"
                    }
                  }
                ],
                "patch": {
                  "summary": "Activate or deactivate an account. - [Only Staff's can perform this operation]",
                  "tags": ["Accounts"],
                  "requestBody": {
                    "description": "Input Data Format",
                    "content": {
                      "application/x-www-form-urlencoded": {
                        "schema": {
                          "properties": {
                            "status": {
                              "type": "string",
                              "description": "Specify the new ‚Äãstatus ‚Äãin‚Äã ‚Äãthe request body.(active, dormant)"
                            }
                          },
                          "type": "object"
                        }
                      }
                    }
                  },
                  "responses": {
                    "422": {
                        "description": "Validation Error"
                    },
                    "401": {
                        "description": "Uauthorized - Specify a JWToken in the header"
                    },
                    "400": {
                      "description": "Account number doesn't exist"
                    },
                    "200": {
                      "description": "Status was successfully updated"
                    }
                  },
                  "security": [
                    {
                      "JWT": []
                    }
                  ]
                },
                "get": {
                    "summary": "Activate or deactivate an account. Specify the new ‚Äãstatus ‚Äãin‚Äã ‚Äãthe request body.",
                    "tags": ["Accounts"],
                    "produces": ["application/json"],
                    "responses": {
                        "401": {
                            "description": "Uauthorized - Specify a JWToken in the header"
                        },
                        "400": {
                            "description": "Account number doesn't exist"
                        },
                        "200": {
                            "description": "Status was successfully updated"
                        }
                    },
                    "security": [
                      {
                        "JWT": []
                      }
                    ]
                },
                "delete": {
                    "summary": "Deletes an account - [Only Staff's can perform this operation]",
                    "tags": ["Accounts"],
                    "produces": ["application/json"],
                    "responses": {
                        "401": {
                            "description": "Uauthorized - Specify a JWToken in the header"
                        },
                        "400": {
                            "description": "Account number doesn't exist"
                        },
                        "200": {
                            "description": "Status was successfully deleted"
                        }
                    },
                    "security": [
                      {
                        "JWT": []
                      }
                    ]
                }
            },
            "/api/v1/transactions/{accountNumber}/debit": {
                "parameters": [
                  {
                    "name": "accountNumber",
                    "in": "path",
                    "required": true,
                    "description": "Account number of the account we want to work with",
                    "schema": {
                      "type": "number"
                    }
                  }
                ],
                "post": {
                    "summary": "Debit a bank account.",
                    "tags": ["Transactions"],
                    "requestBody": {
                      "description": "Input Data Format",
                      "content": {
                        "application/x-www-form-urlencoded": {
                          "schema": {
                            "properties": {
                              "amount": {
                                "type": "string",
                                "description": "Amount to be debit"
                              }
                            },
                            "type": "object"
                          }
                        }
                      }
                    },
                    "responses": {
                      "422": {
                          "description": "Validation Error"
                      },
                      "401": {
                        "description": "Uauthorized - Specify a JWToken in the header"
                        },
                      "400": {
                        "description": "Account number doesn't exist"
                      },
                      "200": {
                        "description": "Transaction was succesful"
                      }
                    },
                    "security": [
                      {
                        "JWT": []
                      }
                    ]
                }
            },
            "/api/v1/transactions/{accountNumber}/credit": {
                "parameters": [
                  {
                    "name": "accountNumber",
                    "in": "path",
                    "required": true,
                    "description": "Account number of the account we want to work with",
                    "schema": {
                      "type": "number"
                    }
                  }
                ],
                "post": {
                    "summary": "Credit a bank account.",
                    "tags": ["Transactions"],
                    "requestBody": {
                      "description": "Input Data Format",
                      "content": {
                        "application/x-www-form-urlencoded": {
                          "schema": {
                            "properties": {
                              "amount": {
                                "type": "string",
                                "description": "Amount to be credit"
                              }
                            },
                            "type": "object"
                          }
                        }
                      }
                    },
                    "responses": {
                      "422": {
                          "description": "Validation Error"
                      },
                      "401": {
                        "description": "Uauthorized - Specify a JWToken in the header"
                        },
                      "400": {
                        "description": "Account number doesn't exist"
                      },
                      "200": {
                        "description": "Transaction was succesful"
                      }
                    },
                    "security": [
                      {
                        "JWT": []
                      }
                    ]
                }
            }
        },
        "components": {
            "securitySchemes": {
              "JWT": {
                "type": "apiKey",
                "description": "JWT token is received after registering/login, input format: \"Bearer \\<token\\>\"",
                "name": "x-access-token",
                "in": "header"
              }
            }
        }
}